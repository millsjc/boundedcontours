# Installs dependencies and runs pytest with several Python versions
# If triggered by a pushed tag beginning with 'v', it will deploy to PyPI 
# (also on a manual trigger with the 'publish' input set to true).

name: test

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'examples/**'
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'examples/**'
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      publish:
        type: boolean
        description: 'Publish to PyPI'
        required: false
        default: false

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: check pyproject.toml version matches tag
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        tag=$(echo $GITHUB_REF | sed -e 's/refs\/tags\/v//')
        version=$(cat pyproject.toml | grep version | sed -E 's/[^0-9.]*//g')
        if [ "$tag" != "$version" ]; then
          echo "Tag $tag does not match pyproject.toml version $version"
          exit 1
        fi
    - name: Install and build
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U build
        python -m pip install '.[test]'
        python -m build .
    - name: Test with pytest
      run: |
        pytest
    - name: Upload dist
      if: matrix.python-version == '3.11' && (startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && inputs.publish))
      uses: actions/upload-artifact@v4
      with:
        path: dist/*

  deploy:
    needs: [build_and_test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && inputs.publish)
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
      - name: list the downloaded files
        run: ls -l dist
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}  || ${{ failure() }}
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11        
        with:
          password: ${{ secrets.PYPI_API_KEY }}
